AWSTemplateFormatVersion: 2010-09-09
Description: "Cf-Stack for the cicd-pipeline regarding base-infrastructure in all stages"

Parameters:
  #  DevAccount:
  #    Description: "AWS AccountId for the dev-environment"
  #    Type: Number
  ProdAccount:
    Description: "AWS AccountId for the prod-environment"
    Type: Number
  gitHubOAuthToken:
    Description: "The gitHub oauth-token for authentication between github and aws-codepipeline"
    Type: String
  PreReqStack:
    Description: "StackName of the PreReqStack"
    Type: String
  CodePipelineRoleStack:
    Description: "StackName of the CodePipeline-Role for Cloudformation-Deployment"
    Type: String
  CfBasePipelineCrossAccountProdRoleArn:
    Description: "RoleArn of the cfBasePipeline-CrossAccount-Role"
    Type: String
  CfDeployerCrossAccountProdRoleArn:
    Description: "RoleArn of the cloudformationDeployer-Role"
    Type: String

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - S3BucketPolicy
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::ImportValue: !Sub ${PreReqStack}:CMK-Arn
          Type: "KMS"
        Location:
          Fn::ImportValue: !Sub ${PreReqStack}:S3ArtifactBucket
        Type: "S3"
      Name: "base-cfPipeline-dev"
      RestartExecutionOnUpdate: False
      RoleArn:
        Fn::ImportValue: !Sub ${CodePipelineRoleStack}:roleArn
      Stages:
        - Name: "Checkout-SourceCode"
          Actions:
            - Name: "Checkout-SourceCode"
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: smartoffice-cloudnative
                Repo: aws-infrastructure
                Branch: master
                PollForSourceChanges: False
                OAuthToken: !Ref gitHubOAuthToken
              OutputArtifacts:
                - Name: "SourceArtifact"
              RunOrder: 1
        - Name: "Deploy-to-Production"
          Actions:
            - Name: "deploy-base-vpc"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: "base-vpc-dev"
                RoleArn: !Sub ${CfDeployerCrossAccountProdRoleArn}
                TemplateConfiguration: "SourceArtifact::stacks/base-infrastructure/vpc/dev.json"
                TemplatePath: "SourceArtifact::stacks/base-infrastructure/vpc/template.yaml"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub ${CfBasePipelineCrossAccountProdRoleArn}
              RunOrder: 1

            - Name: "deploy-base-ecsCluster"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: "base-ecsCluster-dev"
                RoleArn: !Sub ${CfDeployerCrossAccountProdRoleArn}
                TemplateConfiguration: "SourceArtifact::stacks/base-infrastructure/ecs-cluster/dev.json"
                TemplatePath: "SourceArtifact::stacks/base-infrastructure/ecs-cluster/template.yaml"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub ${CfBasePipelineCrossAccountProdRoleArn}
              RunOrder: 1

            - Name: "deploy-base-elb"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: "base-elb-dev"
                RoleArn: !Sub ${CfDeployerCrossAccountProdRoleArn}
                TemplatePath: "SourceArtifact::stacks/base-infrastructure/elb/template.yaml"
                TemplateConfiguration: "SourceArtifact::stacks/base-infrastructure/elb/dev.json"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub ${CfBasePipelineCrossAccountProdRoleArn}
              RunOrder: 2

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Fn::ImportValue: !Sub "${PreReqStack}:S3ArtifactBucket"
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - 'arn:aws:s3:::artifactbucket-smartoffice-cf-sourcecode'
              - 'arn:aws:s3:::artifactbucket-smartoffice-cf-sourcecode/*'
            Principal:
              AWS:
                - !Sub ${CfBasePipelineCrossAccountProdRoleArn}
                - Fn::ImportValue: !Sub ${CodePipelineRoleStack}:roleArn
