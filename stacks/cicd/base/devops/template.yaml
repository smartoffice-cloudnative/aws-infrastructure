AWSTemplateFormatVersion: 2010-09-09
Description: "Cf-Stack for the cicd-pipeline regarding base-infrastructure in all stages"

Parameters:
  #  DevAccount:
  #    Description: "AWS AccountId for the dev-environment"
  #    Type: Number
  ProdAccount:
    Description: "AWS AccountId for the prod-environment"
    Type: Number
  gitHubOAuthToken:
    Description: "The gitHub oauth-token for authentication between github and aws-codepipeline"
    Type: String
  PreReqStack:
    Description: "StackName of the PreReqStack"
    Type: String

Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "pipelineCfBase-Role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
  PipelineRolePolicies:
    Type: AWS::IAM::Policy
    DependsOn: PipelineRole
    Properties:
      PolicyName: "pipelineCfBase-Policies"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - codepipeline:*
              - iam:ListRoles
              - cloudformation:Describe*
              - cloudFormation:List*
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
              - s3:*
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              Fn::ImportValue: !Sub "${PreReqStack}:CMK-Arn"
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${PreReqStack}:S3ArtifactBucket"
              - !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - Fn::ImportValue: !Sub "${PreReqStack}:S3ArtifactBucket"
                    - '/*'
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub 'arn:aws:iam::${ProdAccount}:role/pipelineCfBase-ProdAcc-Role'
              - 'arn:aws:iam::147376585776:role/pipelineCfBase-Role'
      Roles:
        - !Ref PipelineRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - PipelineRolePolicies
      - S3BucketPolicy
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::ImportValue: !Sub "${PreReqStack}:CMK-Arn"
          Type: "KMS"
        Location:
          Fn::ImportValue: !Sub "${PreReqStack}:S3ArtifactBucket"
        Type: "S3"
      Name: "base-cfPipeline-dev"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: "Checkout-SourceCode"
          Actions:
            - Name: "Checkout-SourceCode"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: "1"
              Configuration:
                Owner: "smartoffice-cloudnative"
                Repo: "aws-infrastructure"
                Branch: "master"
                PollForSourceChanges: False
                OAuthToken: !Ref gitHubOAuthToken
              OutputArtifacts:
                - Name: "SourceArtifact"
              RunOrder: 1
        - Name: "Deploy-to-Production"
          Actions:
            - Name: "deploy-base-vpc"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: "1"
              Configuration:
                ActionMode: "CREATE_UPDATE"
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                StackName: "base-vpc-dev"
                RoleArn: !Sub "arn:aws:iam::${ProdAccount}:role/cloudformationdeployer-role"
                TemplateConfiguration: "SourceArtifact::stacks/vpc/dev.json"
                TemplatePath: "SourceArtifact::stacks/vpc/template.yaml"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub 'arn:aws:iam::${ProdAccount}:role/pipelineCfBase-ProdAcc-Role'
              RunOrder: 1

            - Name: "deploy-base-ecsCluster"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: "1"
              Configuration:
                ActionMode: "CREATE_UPDATE"
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                StackName: "base-ecsCluster-dev"
                RoleArn: !Sub "arn:aws:iam::${ProdAccount}:role/cloudformationdeployer-role"
                TemplateConfiguration: "SourceArtifact::stacks/ecs-cluster/dev.json"
                TemplatePath: "SourceArtifact::stacks/ecs-cluster/template.yaml"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub 'arn:aws:iam::${ProdAccount}:role/pipelineCfBase-ProdAcc-Role'
              RunOrder: 1

            - Name: "deploy-base-elb"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CloudFormation"
                Version: "1"
              Configuration:
                ActionMode: "CREATE_UPDATE"
                Capabilities: "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                StackName: "base-elb-dev"
                RoleArn: !Sub "arn:aws:iam::${ProdAccount}:role/cloudformationdeployer-role"
                TemplatePath: "SourceArtifact::stacks/elb/template.yaml"
                TemplateConfiguration: "SourceArtifact::stacks/elb/dev.json"
              InputArtifacts:
                - Name: "SourceArtifact"
              RoleArn: !Sub 'arn:aws:iam::${ProdAccount}:role/pipelineCfBase-ProdAcc-Role'
              RunOrder: 2

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Fn::ImportValue: !Sub "${PreReqStack}:S3ArtifactBucket"
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - 'arn:aws:s3:::artifactbucket-smartoffice-cf-sourcecode'
              - 'arn:aws:s3:::artifactbucket-smartoffice-cf-sourcecode/*'
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${ProdAccount}:role/pipelineCfBase-ProdAcc-Role'
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/pipelineCfBase-Role"
